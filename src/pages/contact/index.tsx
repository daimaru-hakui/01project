import React, { useState } from "react";
import Styles from "./index.module.scss";
import Head from "next/head";
import { init, send } from "emailjs-com";
import { Button } from "@material-ui/core";
import SendIcon from "@material-ui/icons/Send";
import ClearIcon from "@material-ui/icons/Clear";

const Contact: React.FC = () => {
  const [name, setName] = useState(""); // 「お名前」
  const [company, setCompany] = useState(""); // 「会社名」
  const [tel, setTel] = useState(""); // 「会社名」
  const [fax, setFax] = useState(""); // 「会社名」
  const [mail, setMail] = useState(""); // 「メールアドレス」
  const [title, setTitle] = useState(""); // 「件名」
  const [message, setMessage] = useState(""); // 「お問い合わせ内容」

  const sendMail = () => {
    const userID = "user_7yd9EbIQJSbzjqGUXUbJt";
    const serviceID = "service_764mpxv";
    const templateID = "template_gii3nlf";
    if (
      userID !== undefined &&
      serviceID !== undefined &&
      templateID !== undefined
    ) {
      init(userID);

      const template_param = {
        from_name: name,
        company: company,
        from_email: mail,
        tel: tel,
        fax: fax,
        title: title,
        message: message,
      };
      send(serviceID, templateID, template_param).then(() => {
        window.alert("お問い合わせを送信致しました。");

        setName("");
        setCompany("");
        setTel("");
        setFax("");
        setMail("");
        setMessage("");
        setTitle("");
      });
    }
  };

  const handleClick = (e: any) => {
    e.preventDefault();
    sendMail();
  };

  const handleCanceled = () => {
    setName("");
    setCompany("");
    setMail("");
    setMessage("");
    setTitle("");
  };

  const disableSend =
    name === "" || mail === "" || title === "" || message === "";

  return (
    <>
      <Head>
        <title>お問い合わせ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`flex flex-col items-center mt-12 lg:mt-24`}>
        <h1 className={`text-5xl font-bold`}>Contact</h1>
        <p className={`text-sm lg:text-lg mt-7`}>
          大丸白衣へのお問い合わせはこちらから
        </p>
        <p className="text-center mt-6">
          電話・FAXでのお問い合わせの場合
          <br />
          TEL. 06-6632-0891　FAX. 06-6411-9200
          <br />
          ※土・日・祝除く 9:00〜18:00
          <br />
          メールでのお問い合わせは下記フォームにてどうぞ。
        </p>
        <div
          className={`flex w-11/12 border rounded-md my-6 p-6 max-w-screen-sm lg:p-12 lg:w-10/12`}
        >
          <form className={`${Styles.form} w-full`}>
            <h2 className={`mb-7 text-center`}>
              ※<span className={`text-red-600`}>（必須）</span>
              の項目は、必ずすべてご記入ください。
            </h2>
            <div className={`${Styles.formBox}`}>
              <div>
                <label htmlFor="nameForm">
                  お名前<span className={`text-red-600`}>（必須）</span>
                </label>
              </div>
              <input
                type="text"
                id="nameForm"
                className={`${Styles.formInput}`}
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
            </div>
            <div className={`${Styles.formBox}`}>
              <div>
                <label htmlFor="companyNameForm">会社名</label>
              </div>
              <input
                type="text"
                id="companyNameForm"
                className={`${Styles.formInput}`}
                value={company}
                onChange={(e) => setCompany(e.target.value)}
                required
              />
            </div>
            <div className={`${Styles.formBox}`}>
              <div>
                <label htmlFor="telForm">電話番号</label>
              </div>
              <input
                type="text"
                id="telForm"
                className={`${Styles.formInput}`}
                value={tel}
                onChange={(e) => setTel(e.target.value)}
                required
              />
            </div>
            <div className={`${Styles.formBox}`}>
              <div>
                <label htmlFor="faxForm">FAX番号</label>
              </div>
              <input
                type="text"
                id="faxForm"
                className={`${Styles.formInput}`}
                value={fax}
                onChange={(e) => setFax(e.target.value)}
                required
              />
            </div>
            <div className={`${Styles.formBox}`}>
              <div>
                <label htmlFor="mailForm">
                  メールアドレス<span className={`text-red-600`}>（必須）</span>
                </label>
              </div>
              <input
                type="email"
                id="mailForm"
                className={`${Styles.formInput}`}
                value={mail}
                onChange={(e) => setMail(e.target.value)}
              />
            </div>
            <div className={`${Styles.formBox}`}>
              <div>
                <label htmlFor="mailTitleForm">
                  件名<span className={`text-red-600`}>（必須）</span>
                </label>
              </div>
              <input
                type="text"
                id="mailTitleForm"
                className={`${Styles.formInput}`}
                value={title}
                onChange={(e) => setTitle(e.target.value)}
              />
            </div>
            <div className={`${Styles.formBoxSecond}`}>
              <div>
                <label htmlFor="mailContentForm">
                  お問い合わせ内容
                  <span className={`text-red-600`}>（必須）</span>
                </label>
              </div>
              <textarea
                id="mailContentForm"
                className={`${Styles.formTextArea}`}
                value={message}
                onChange={(e) => setMessage(e.target.value)}
              />
            </div>
            <div
              className={`flex flex-col items-center justify-center lg:flex-row`}
            >
              <div className={`m-2`}>
                <Button
                  variant="contained"
                  color="default"
                  // onClick={handleClick}
                  disabled={disableSend}
                  endIcon={<SendIcon />}
                >
                  <strong>　送信する　</strong>
                </Button>
              </div>
              <div className={`m-2`}>
                <Button
                  variant="contained"
                  color="default"
                  onClick={handleCanceled}
                  endIcon={<ClearIcon />}
                >
                  <strong>キャンセル</strong>
                </Button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </>
  );
};

export default Contact;
